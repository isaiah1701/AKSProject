apiVersion: v1
kind: Namespace
metadata:
  name: argocd
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-server
  namespace: argocd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argocd-server
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]
- nonResourceURLs: ["*"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argocd-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argocd-server
subjects:
- kind: ServiceAccount
  name: argocd-server
  namespace: argocd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-server
  namespace: argocd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: argocd-server
  template:
    metadata:
      labels:
        app: argocd-server
    spec:
      serviceAccountName: argocd-server
      containers:
      - name: argocd-server
        image: quay.io/argoproj/argocd:v2.9.3
        command:
        - argocd-server
        - --insecure
        ports:
        - containerPort: 8080
        - containerPort: 8083
        env:
        - name: ARGOCD_SERVER_INSECURE
          value: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-application-controller
  namespace: argocd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: argocd-application-controller
  template:
    metadata:
      labels:
        app: argocd-application-controller
    spec:
      serviceAccountName: argocd-server
      containers:
      - name: argocd-application-controller
        image: quay.io/argoproj/argocd:v2.9.3
        command:
        - argocd-application-controller
        ports:
        - containerPort: 8082
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-repo-server
  namespace: argocd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: argocd-repo-server
  template:
    metadata:
      labels:
        app: argocd-repo-server
    spec:
      containers:
      - name: argocd-repo-server
        image: quay.io/argoproj/argocd:v2.9.3
        command:
        - argocd-repo-server
        ports:
        - containerPort: 8081
---
apiVersion: v1
kind: Service
metadata:
  name: argocd-server
  namespace: argocd
spec:
  selector:
    app: argocd-server
  ports:
  - name: server
    port: 80
    targetPort: 8080
  - name: grpc
    port: 443
    targetPort: 8080
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: argocd-repo-server
  namespace: argocd
spec:
  selector:
    app: argocd-repo-server
  ports:
  - port: 8081
    targetPort: 8081
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-ingress
  namespace: argocd
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    cert-manager.io/cluster-issuer: "letsencrypt-dns"
    external-dns.alpha.kubernetes.io/hostname: argocd.isaiahmichael.com
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
    nginx.ingress.kubernetes.io/server-snippet: |
      grpc_read_timeout 300;
      grpc_send_timeout 300;
      client_body_timeout 60;
      client_header_timeout 60;
      client_max_body_size 1m;
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - argocd.isaiahmichael.com
    secretName: argocd-tls-secret
  rules:
  - host: argocd.isaiahmichael.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: argocd-server
            port:
              number: 80
---
# ArgoCD Application to manage the app itself
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: image-classifier-app
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://github.com/isaiah1701/AKSProject.git  # Update with your repo
    targetRevision: main
    path: k8-manifests/app
  destination:
    server: https://kubernetes.default.svc
    namespace: app
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
